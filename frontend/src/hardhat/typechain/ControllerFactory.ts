/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { Controller } from "./Controller";

export class ControllerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Controller> {
    return super.deploy(overrides || {}) as Promise<Controller>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  connect(signer: Signer): ControllerFactory {
    return super.connect(signer) as ControllerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_minters",
        type: "address[]",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_minters",
        type: "address[]",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610353806100326000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806392eefe9b14610046578063a81b42e81461006e578063f18e33e1146100dc575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b031661014a565b005b61006c6004803603602081101561008457600080fd5b810190602081018135600160201b81111561009e57600080fd5b8201836020820111156100b057600080fd5b803590602001918460208302840111600160201b831117156100d157600080fd5b5090925090506101b5565b61006c600480360360208110156100f257600080fd5b810190602081018135600160201b81111561010c57600080fd5b82018360208201111561011e57600080fd5b803590602001918460208302840111600160201b8311171561013f57600080fd5b509092509050610259565b6000546001600160a01b031633146101935760405162461bcd60e51b81526004018080602001828103825260268152602001806102f86026913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101fe5760405162461bcd60e51b81526004018080602001828103825260268152602001806102f86026913960400191505060405180910390fd5b60005b818110156102545760006001600085858581811061021b57fe5b602090810292909201356001600160a01b0316835250810191909152604001600020805460ff1916911515919091179055600101610201565b505050565b6000546001600160a01b031633146102a25760405162461bcd60e51b81526004018080602001828103825260268152602001806102f86026913960400191505060405180910390fd5b60005b818110156102545760018060008585858181106102be57fe5b602090810292909201356001600160a01b0316835250810191909152604001600020805460ff19169115159190911790556001016102a556fe436f6e74726f6c6c65723a20596f7520617265206e6f742074686520636f6e74726f6c6c6572a26469706673582212203d399ed043b200fbb3f9e2bdb73d185cba9d15edf4ab03028ca1de4eb5380e0364736f6c63430007030033";
